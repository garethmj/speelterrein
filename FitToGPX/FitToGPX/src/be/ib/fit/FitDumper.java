////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2008 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 1.20Release
// Tag = $Name: AKW1_200 $
////////////////////////////////////////////////////////////////////////////////
package be.ib.fit;

import java.io.FileInputStream;
import java.io.InputStream;
import java.util.ArrayList;

import com.garmin.fit.Decode;
import com.garmin.fit.Fit;
import com.garmin.fit.MesgBroadcaster;
import com.garmin.fit.MesgDefinitionListener;
import com.garmin.fit.MesgListener;
import com.garmin.fit.test.TestTool;

/**
 * 
 * @author Ivan Belis
 * @see TestTool and CSVTool
 */
public class FitDumper {
	public static void main(String args[]) {
		int arg = 0;
		ArrayList<String> inFile = new ArrayList<String>();


		System.out.printf("FIT Dumpo Tool %d.%d.%d.%d\n",
				Fit.PROTOCOL_VERSION_MAJOR, Fit.PROTOCOL_VERSION_MINOR,
				Fit.PROFILE_VERSION_MAJOR, Fit.PROFILE_VERSION_MINOR);

		while (arg < args.length) {
			if (args[arg].equals("-d")) {
				Fit.debug = true;
			} else {
				String in = args[arg];
				inFile.add(in);
			}
			arg++;
		}

		if (inFile.size() == 0) {
			printUsage();
			return;
		}

		for (String inFilename : inFile) {
			dumpFitFile(inFilename);
		}
		

	}
	
	private static void dumpFitFile(String fitFilename) {
        try {
            Decode decode = new Decode();
            MesgBroadcaster broadcaster = new MesgBroadcaster(decode);
            MesgSimpleTextWriter mesgWriter = new MesgSimpleTextWriter(System.out);

            decode.addListener((MesgDefinitionListener) mesgWriter);
            decode.addListener((MesgListener) mesgWriter);

            broadcaster.run((InputStream) new FileInputStream(fitFilename));
            
            mesgWriter.close();
         } catch (java.io.IOException e) {
            throw new RuntimeException(e);
         }
	}

	private static void printUsage() {
		System.out
				.println("Usage: java -jar FitDumper.jar <INPUT FILE> <INPUT FILE>");
		System.out.println("      -d Enable debug output.");
	}
}